name: Test example positive
on:
#  # Uncomment when test added first time to register workflow and comment it back after workflow would be registered
#  #
#  # Added pull_request to register workflow from the PR.
#  # Read more https://stackoverflow.com/questions/63362126/github-actions-how-to-run-a-workflow-created-on-a-non-master-branch-from-the-wo
#  pull_request: {}
  workflow_dispatch: {}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Setup
        run: echo "Do setup"

  test:
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: [setup]
    services:
      localstack:
        image: localstack/localstack:1.3.1
        credentials:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
        ports:
          - 4566:4566
          - 4510-4559:4510-4559
    steps:
      - uses: debianmaster/actions-k3s@master
        id: k3s
        with:
          version: 'v1.23.2-k3s1'

      - name: 'Install jq 1.6'
        uses: dcarbone/install-jq-action@v1.0.1
        with:
          version: 1.6
          force: 'true'

      - run: |
          aws ${AWS_ENDPOINT_OVERRIDE:+--endpoint-url $AWS_ENDPOINT_OVERRIDE} ssm put-parameter \
            --name "/platform/default/staging/default_ingress_domain" \
            --type "SecureString" \
            --value "example.com"
          
          aws ${AWS_ENDPOINT_OVERRIDE:+--endpoint-url $AWS_ENDPOINT_OVERRIDE} ssm put-parameter \
            --name "/platform/default/staging/default_alb_ingress_group" \
            --type "SecureString" \
            --value "default" \
            --debug

          aws ${AWS_ENDPOINT_OVERRIDE:+--endpoint-url $AWS_ENDPOINT_OVERRIDE} ssm put-parameter \
            --name "/platform/default/_metadata/kube_version" \
            --type "SecureString" \
            --value "1.15" \
            --debug
        env:
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
          AWS_DEFAULT_REGION: us-east-1
          ## Use localhost to connect localstack because the commands runs not in a container
          AWS_ENDPOINT_OVERRIDE: http://localhost:4566

      - id: original_path
        run: |
          echo "aws=$(whereis aws | cut -d' ' -f2)" >> $GITHUB_OUTPUT

      - name: Mock AWS command
        id: aws_mock
        uses: cloudposse/github-action-yaml-config-query@0.1.2
        with:
          config: |-
            aws: |-
              #!/bin/bash -l
              
              set -e
              
              if [[ "$1" == "eks" ]];
              then
                echo "Skip EKS related commands"
                exit 0
              fi   

              if [[ "$1" == "sts" ]];
              then
                echo "Skip STS related commands"
                exit 0
              fi   
            
              ${{ steps.original_path.outputs.aws }} "$@"

      - id: mock
        run: |
          mkdir -p ./bin/
          echo "${{ steps.aws_mock.outputs.aws }}" > ./bin/aws
          chmod +x ./bin/aws
          cat ./bin/aws
          echo "path=/github/workspace/bin/:${PATH}" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v3

      - uses: ./
        id: current
        with:
          aws-region: us-east-1
          cluster: preview-eks
          environment: preview
          namespace: preview
          image: nginx
          image-tag: latest
          operation: deploy
          debug: false
        env:
          PATH: ${{ steps.mock.outputs.path }}
          PATH_OVERRIDE: ${{ steps.mock.outputs.path }}
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
          AWS_DEFAULT_REGION: us-east-1
          ## Use localhost to connect localstack because the commands runs not in a container
          AWS_ENDPOINT_OVERRIDE: http://localstack:4566
          ## Use localstack to connect localstack because the chamber runs in a container
          CHAMBER_AWS_SSM_ENDPOINT: http://localstack:4566/

    outputs:
      result: "${{ steps.current.outputs.result1 }}"

  assert:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: nick-fields/assert-action@v1
        with:
          expected: 'true'
          actual: "${{ needs.test.outputs.result }}"

  teardown:
    runs-on: ubuntu-latest
    needs: [assert]
    if: ${{ always() }}
    steps:
      - name: Tear down
        run: echo "Do Tear down"
